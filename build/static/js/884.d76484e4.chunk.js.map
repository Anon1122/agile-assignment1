{"version":3,"file":"static/js/884.d76484e4.chunk.js","mappings":"gTAYe,SAASA,EAAc,GAAW,IAAVC,EAAM,EAANA,OACrC,OAEE,UAACC,EAAA,EAAI,CAACC,GAAI,CAAEC,SAAU,IAAKC,gBAAiB,uGAAwG,WAC5I,SAACC,EAAA,EAAU,CACfC,OACE,UAACC,EAAA,EAAU,CAACL,GAAI,CAACM,MAAO,SAAUC,QAAQ,KAAKC,UAAU,IAAG,UACzDV,EAAOW,KAAM,UAIpB,SAACC,EAAA,EAAS,CACRV,GAAI,CAAEW,OAAQ,KACdC,MACId,EAAOe,aAAY,0CACkBf,EAAOe,cAC1CC,KAGR,SAACC,EAAA,EAAW,CAACf,GAAI,CAACM,MAAO,SAAS,UAChC,UAACU,EAAA,GAAI,CAACC,WAAS,aACb,SAACD,EAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAE,UACf,UAACd,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,IAAG,WACpC,SAACY,EAAA,EAAQ,CAACC,SAAS,UAClB,IAAKvB,EAAOwB,2BAGjB,SAACN,EAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAE,UACf,UAACd,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,IAAG,WACpC,SAACe,EAAA,EAAiB,CAACF,SAAS,UAC3B,KAAI,IAAGvB,EAAO0B,UAAW,UAG9B,SAACR,EAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAE,UACf,UAACd,EAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,IAAG,WACpC,SAACiB,EAAA,EAAY,CAACJ,SAAS,UACtB,KAAI,IAAGvB,EAAO4B,WAAY,gBAOzC,CCnDA,IASA,EATsB,SAAH,GAMjB,OAN8B,EAAPC,QACEC,KAAI,SAACC,GAAC,OAC7B,SAACb,EAAA,GAAI,CAAYE,MAAI,EAACC,GAAI,GAAIW,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,UACvD,SAAC,EAAM,CAAYnC,OAAQ+B,GAAdA,EAAEK,KADNL,EAAEK,GAEN,GAGX,EC0CA,MA/CA,SAA+B,GAAoC,IAAlC9B,EAAK,EAALA,MAAM+B,EAAW,EAAXA,YAAYC,EAAW,EAAXA,YAGjD,GAAoCC,EAAAA,EAAAA,UAAS,GAAE,eAAzCC,EAAW,KAACC,EAAc,KAChC,GAAoCF,EAAAA,EAAAA,UAAS,IAAG,eAAzCG,EAAU,KAAEC,EAAa,KAChC,GAA4CJ,EAAAA,EAAAA,UAAS,KAAI,eAAlDK,EAAc,KAAEC,EAAiB,KAKtCC,EAHe,CAACT,EAAYC,GAGEE,GAAaO,QAAO,SAACC,EAAEC,EAAEC,GAAC,OAAGA,EAAEC,WAAU,SAAAC,GAAE,OAAGA,EAAGzC,OAAOqC,EAAErC,IAAI,MAAKsC,CAAC,IAAEI,MAAK,SAASH,EAAEI,GAEtH,OADiC,OAAjBJ,EAAEnC,eAAuC,OAAjBuC,EAAEvC,iBAAwBmC,EAAEI,MAAMJ,EAAEI,EAE9E,IAAGP,QAAO,SAAChB,GACH,OAAkE,IAA3DA,EAAEpB,KAAK4C,cAAcC,OAAOd,EAAWa,cACtD,IAWE,OAEE,UAACrC,EAAA,GAAI,CAACC,WAAS,EAACjB,GAAI,CAAEuD,QAAS,OAAQC,gBAAiB,mBAAqB,WAC3E,SAACxC,EAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC,IAAM,CAACf,MAAOA,OAEjB,UAACY,EAAA,GAAI,CAACE,MAAI,EAACD,WAAS,EAACwC,QAAS,EAAE,WAChC,SAACzC,EAAA,GAAI,CAAYE,MAAI,EAACC,GAAI,GAAIW,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,UACnD,SAAC,IAAU,CACXyB,YAlBS,SAACC,EAAMC,GACf,aAARD,GAEDpB,EADW,IAAVqB,EACc,EACI,GAER,SAATD,EAAkBlB,EAAcmB,GAC/BjB,EAAkBiB,EACzB,EAWYpB,WAAYA,EACZqB,qBAAsBnB,EACtBf,QAASQ,KALL,SAQR,SAAC,EAAa,CAACR,QAASiB,SAKhC,E,UCxBA,EAtBsB,SAACkB,GACrB,IACOC,GADQC,EAAAA,EAAAA,MACWC,MAAnBF,OAEP,GAAsC1B,EAAAA,EAAAA,UAAS,IAAG,eAA3CF,EAAW,KAAE+B,EAAc,KAClC,GAAsC7B,EAAAA,EAAAA,UAAS,IAAG,eAA3CD,EAAW,KAAE+B,EAAc,KAUlC,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,EAAO7B,IAAIoC,MAAK,SAACP,GAC5BG,EAAeH,EAAOQ,MACtBJ,EAAeJ,EAAOS,KACxB,GAEF,GAAG,KAGD,SAAC,EAAY,CAACC,KAAMV,EAAO7B,GAAI9B,MAAO2D,EAAOtD,KAAM0B,YAAaA,EAAaC,YAAaA,GAI9F,C","sources":["components/tvCreditsCard/index.js","components/tvCreditsList/index.js","components/templateTvCreditsPage/index.js","pages/tvCreditsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/no-image-available.png'\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\n\r\nexport default function TvCreditsCard({credit}) {\r\n  return (\r\n    \r\n    <Card sx={{ maxWidth: 345, backgroundImage: \"url('https://wallpaperboat.com/wp-content/uploads/2019/10/high-resolution-black-background-06.jpg')\" }} >\r\n            <CardHeader\r\n        title={\r\n          <Typography sx={{color: 'white'}} variant=\"h6\" component=\"p\">\r\n            {credit.name}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n            credit.profile_path\r\n            ? `https://image.tmdb.org/t/p/w500/${credit.profile_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent sx={{color: 'white'}}>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <WorkIcon fontSize=\"small\" />\r\n              {\" \"}{credit.known_for_department}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <EmojiEmotionsIcon fontSize=\"small\" />\r\n              {\"  \"} {credit.character}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {credit.popularity}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport TvShow from \"../tvCreditsCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst TvCreditsList = ( {credits }) => {\r\n  let movieCards = credits.map((m) => (\r\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <TvShow key={m.id} credit={m} />\r\n    </Grid>\r\n  ));\r\n  return movieCards;\r\n};\r\n\r\nexport default TvCreditsList;","import React, {  useState }  from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterCreditsCard\";\r\nimport TvCreditsList from \"../tvCreditsList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction TvCreditsPageTemplate({ title,creditsCrew,creditsCast }) {\r\n\r\n  //States\r\n  const[showCredits,setShowCredits] = useState(0);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [involvedFilter, setInvolvedFilter] = useState(\"0\");\r\n  \r\n  const credsarr = [creditsCrew,creditsCast]\r\n\r\n//Removes the dublice credits in the json path and sorts poster images that start with posters with images to the posters with no images ().\r\nlet noDuplicateCredits = credsarr[showCredits].filter((v,i,a)=>a.findIndex(v2=>(v2.name===v.name))===i).sort(function(a,b){\r\n  let noDupes = ((a.profile_path===null)-(b.profile_path===null)||+(a>b)||-(a<b))\r\n  return noDupes\r\n}).filter((m) => {\r\n        return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n})\r\n\r\nconst handleChange = (type, value) => {\r\n  if(type ===\"involved\"){\r\n  if(value === 0) {\r\n    setShowCredits(0)\r\n  }else setShowCredits(1)\r\n}\r\n  if (type === \"name\") {setNameFilter(value);}\r\n  else setInvolvedFilter(value);\r\n};\r\n  return (\r\n   \r\n    <Grid container sx={{ padding: '20px', backgroundColor: \"rgba(0,0,0,0.1)\" } }>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5} >\r\n      <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          { <FilterCard\r\n            onUserInput={handleChange}\r\n            nameFilter={nameFilter}\r\n            involvedPeopleFilter={involvedFilter}\r\n            credits={creditsCrew}\r\n          /> }\r\n        </Grid>\r\n        <TvCreditsList credits={noDuplicateCredits}></TvCreditsList>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\nexport default TvCreditsPageTemplate;","import React, { useEffect, useState }  from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PageTemplate from \"../components/templateTvCreditsPage\";\r\nimport { getTvCredits } from \"../api/tmdb-api\";\r\n\r\n\r\nconst TvCreditsPage = (props) => {\r\n  let location = useLocation();\r\n  const {tvShow} = location.state;\r\n\r\n  const [creditsCrew, setCreditsCrew] = useState([]);\r\n  const [creditsCast, setCreditsCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTvCredits(tvShow.id).then((tvShow) => {\r\n      setCreditsCrew(tvShow.crew);\r\n      setCreditsCast(tvShow.cast);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate tvId={tvShow.id} title={tvShow.name} creditsCrew={creditsCrew} creditsCast={creditsCast}>\r\n      \r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default TvCreditsPage;"],"names":["TvCreditsCard","credit","Card","sx","maxWidth","backgroundImage","CardHeader","title","Typography","color","variant","component","name","CardMedia","height","image","profile_path","img","CardContent","Grid","container","item","xs","Work","fontSize","known_for_department","EmojiEmotions","character","StarRate","popularity","credits","map","m","sm","md","lg","xl","id","creditsCrew","creditsCast","useState","showCredits","setShowCredits","nameFilter","setNameFilter","involvedFilter","setInvolvedFilter","noDuplicateCredits","filter","v","i","a","findIndex","v2","sort","b","toLowerCase","search","padding","backgroundColor","spacing","onUserInput","type","value","involvedPeopleFilter","props","tvShow","useLocation","state","setCreditsCrew","setCreditsCast","useEffect","getTvCredits","then","crew","cast","tvId"],"sourceRoot":""}