{"version":3,"file":"static/js/98.63e55aa5.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/headerMovieList/index.js","components/movieCreditsCard/index.js","components/movieCreditsList/index.js","components/templateCreditsPage/index.js","pages/movieCreditsPage.js"],"sourcesContent":["export const getMovies = () => {\r\n \r\n  return fetch(\r\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\nexport const getMovie = (args) => {\r\n   console.log(args)\r\n  const [, idPart] = args.queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\n export const getGenres = async () => {\r\n    return fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  }; \r\n\r\n  export const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      \r\n      `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n      \r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n  \r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n  export const getMovieReviews = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json.results);\r\n        return json.results;\r\n      });\r\n  };\r\n\r\n  export const getMovieCredits = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n        return json;\r\n      });\r\n  };\r\n\r\n//Pagination ---------------\r\n  export const getMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getUpcomingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getNowPlayingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getPopularMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/tv/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvShow = (args) => {\r\n    console.log(args)\r\n   const [, idPart] = args.queryKey;\r\n   const { id } = idPart;\r\n   return fetch(\r\n     `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n   ).then((response) => {\r\n     if (!response.ok) {\r\n       throw new Error(response.json().message);\r\n     }\r\n     return response.json();\r\n   })\r\n   .catch((error) => {\r\n     throw error\r\n  });\r\n };\r\n\r\n export const getTvCredits = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      \r\n      return json;\r\n    });\r\n};\r\n\r\n export const getTvShowImages = ({ queryKey }) => {\r\n  const [, idPart] = queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    \r\n    `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    \r\n  ).then( (response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getTvShowReviews = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      // console.log(json.results);\r\n      return json.results;\r\n    });\r\n};","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props ) => {\r\n  const title = props.title\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Paper \r\n      component=\"div\" \r\n      sx={{\r\n        borderRadius: \"50px\",\r\n        backgroundColor: 'rgba(255, 255, 0,0.7)',\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: 1.5,\r\n      }}\r\n      >\r\n      <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {title}\r\n      </Typography>\r\n\r\n\r\n      <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/no-image-available.png'\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nexport default function MovieCreditsCard({credit}) {\r\n  return (\r\n    \r\n    <Card sx={{ maxWidth: 345, backgroundImage: \"url('https://wallpaperboat.com/wp-content/uploads/2019/10/high-resolution-black-background-06.jpg')\" }} >\r\n            <CardHeader\r\n        title={\r\n          <Typography sx={{color: 'white'}} variant=\"h6\" component=\"p\">\r\n            {credit.name}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n            credit.profile_path\r\n            ? `https://image.tmdb.org/t/p/w500/${credit.profile_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent sx={{color: 'white'}}>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <WorkIcon fontSize=\"small\" />\r\n              {\" \"}{credit.known_for_department}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <EmojiEmotionsIcon fontSize=\"small\" />\r\n              {\"  \"} {credit.character}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {credit.popularity}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport Movie from \"../movieCreditsCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst MovieCreditsList = ( {credits }) => {\r\n  let movieCards = credits.map((m) => (\r\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Movie key={m.id} credit={m} />\r\n    </Grid>\r\n  ));\r\n  return movieCards;\r\n};\r\n\r\nexport default MovieCreditsList;","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport Spinner from '../spinner';\r\nimport MovieCreditsList from \"../movieCreditsList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nconst FilterCard = lazy(() => import(\"../filterCreditsCard\"));\r\n\r\nfunction MovieCreditsPageTemplate({ title,creditsCrew,creditsCast }) {\r\n\r\n  //States\r\n  const[showCredits,setShowCredits] = useState(0);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [involvedFilter, setInvolvedFilter] = useState(\"0\");\r\n  \r\n  const credsarr = [creditsCrew,creditsCast]\r\n\r\n//Removes the dublice credits in the json path and sorts poster images that start with posters with images to the posters with no images ().\r\nlet noDuplicateCredits = credsarr[showCredits].filter((v,i,a)=>a.findIndex(v2=>(v2.name===v.name))===i).sort(function(a,b){\r\n  let noDupes = ((a.profile_path===null)-(b.profile_path===null)||+(a>b)||-(a<b))\r\n  return noDupes\r\n}).filter((m) => {\r\n        return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n})\r\n\r\n\r\n\r\nconst handleChange = (type, value) => {\r\n  if(type ===\"involved\"){\r\n  if(value === 0) {\r\n    setShowCredits(0)\r\n  }else setShowCredits(1)\r\n}\r\n  if (type === \"name\") {setNameFilter(value);}\r\n  else setInvolvedFilter(value);\r\n};\r\n\r\n\r\n  return (\r\n   \r\n    <Grid container sx={{ padding: '20px', backgroundColor: \"rgba(0,0,0,0.1)\" } }>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5} >\r\n      <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Suspense fallback={<Spinner/>}>\r\n          { \r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            nameFilter={nameFilter}\r\n            involvedPeopleFilter={involvedFilter}\r\n            credits={creditsCrew}\r\n            \r\n          /> }\r\n          </Suspense>\r\n        </Grid>\r\n        <MovieCreditsList credits={noDuplicateCredits}></MovieCreditsList>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\nexport default MovieCreditsPageTemplate;","import React, { useEffect, useState }  from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PageTemplate from \"../components/templateCreditsPage\";\r\nimport { getMovieCredits } from \"../api/tmdb-api\";\r\n\r\n\r\nconst MovieCreditsPage = (props) => {\r\n  let location = useLocation();\r\n  const {movie} = location.state;\r\n\r\n  const [creditsCrew, setCreditsCrew] = useState([]);\r\n  const [creditsCast, setCreditsCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieCredits(movie.id).then((credits) => {\r\n      setCreditsCrew(credits.crew);\r\n      setCreditsCast(credits.cast);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate movieId={movie.id} title={movie.title} creditsCrew={creditsCrew} creditsCast={creditsCast}>\r\n      \r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default MovieCreditsPage;"],"names":["getMovie","args","console","log","id","queryKey","fetch","process","then","response","ok","Error","json","message","catch","error","getGenres","getMovieImages","getMovieReviews","res","results","getMovieCredits","getMoviesPage","page","getUpcomingMoviesPage","getNowPlayingMoviesPage","getPopularMoviesPage","getTvPage","getTvShow","getTvCredits","getTvShowImages","getTvShowReviews","props","title","navigate","useNavigate","component","sx","borderRadius","backgroundColor","display","justifyContent","flexWrap","marginBottom","onClick","color","fontSize","variant","MovieCreditsCard","credit","Card","maxWidth","backgroundImage","CardHeader","Typography","name","CardMedia","height","image","profile_path","img","CardContent","Grid","container","item","xs","Work","known_for_department","EmojiEmotions","character","StarRate","popularity","credits","map","m","sm","md","lg","xl","FilterCard","lazy","creditsCrew","creditsCast","useState","showCredits","setShowCredits","nameFilter","setNameFilter","involvedFilter","setInvolvedFilter","noDuplicateCredits","filter","v","i","a","findIndex","v2","sort","b","toLowerCase","search","padding","spacing","Suspense","fallback","onUserInput","type","value","involvedPeopleFilter","movie","useLocation","state","setCreditsCrew","setCreditsCast","useEffect","crew","cast","movieId"],"sourceRoot":""}