{"version":3,"file":"static/js/25.931d2b54.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/cardIcons/addToPlaylist.js","components/headerMovieList/index.js","components/movieCard/index.js","components/movieList/index.js","components/templateMovieListPage/index.js","pages/upcomingMoviesPage.js","../node_modules/@mui/icons-material/PlaylistAdd.js"],"sourcesContent":["export const getMovies = () => {\r\n \r\n  return fetch(\r\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\nexport const getMovie = (args) => {\r\n   console.log(args)\r\n  const [, idPart] = args.queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\n export const getGenres = async () => {\r\n    return fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  }; \r\n\r\n  export const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      \r\n      `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n      \r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n  \r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n  export const getMovieReviews = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json.results);\r\n        return json.results;\r\n      });\r\n  };\r\n\r\n  export const getMovieCredits = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n        return json;\r\n      });\r\n  };\r\n\r\n//Pagination ---------------\r\n  export const getMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getUpcomingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getNowPlayingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getPopularMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/tv/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvShow = (args) => {\r\n    console.log(args)\r\n   const [, idPart] = args.queryKey;\r\n   const { id } = idPart;\r\n   return fetch(\r\n     `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n   ).then((response) => {\r\n     if (!response.ok) {\r\n       throw new Error(response.json().message);\r\n     }\r\n     return response.json();\r\n   })\r\n   .catch((error) => {\r\n     throw error\r\n  });\r\n };\r\n\r\n export const getTvCredits = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      \r\n      return json;\r\n    });\r\n};\r\n\r\n export const getTvShowImages = ({ queryKey }) => {\r\n  const [, idPart] = queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    \r\n    `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    \r\n  ).then( (response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getTvShowReviews = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      // console.log(json.results);\r\n      return json.results;\r\n    });\r\n};","import React, { useContext } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\r\n\r\nconst AddToPlaylistIcon = ({ movie }) => {\r\n  const context = useContext(MoviesContext);\r\n\r\n  const handleAddToPlaylist = (e) => {\r\n    e.preventDefault();\r\n    context.addToPlaylist(movie);\r\n  };\r\n\r\n  return (\r\n    <IconButton aria-label=\"add to playlist\" onClick={handleAddToPlaylist}>\r\n      <PlaylistAddIcon color=\"primary\" fontSize=\"large\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default AddToPlaylistIcon;","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props ) => {\r\n  const title = props.title\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Paper \r\n      component=\"div\" \r\n      sx={{\r\n        borderRadius: \"50px\",\r\n        backgroundColor: 'rgba(255, 255, 0,0.7)',\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: 1.5,\r\n      }}\r\n      >\r\n      <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {title}\r\n      </Typography>\r\n\r\n\r\n      <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useContext  } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport PlaylistTagIcon from \"@mui/icons-material/PlaylistAddCheck\";\r\nimport CalendarIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\n\r\n\r\n\r\nexport default function MovieCard({movie, action}) {\r\n  const { favorites,playlists } = useContext(MoviesContext);\r\n\r\n  if (favorites.find((id) => id === movie.id)) {\r\n    movie.favorite = true;\r\n  } else {\r\n    movie.favorite = false\r\n  }\r\n\r\n  if (playlists.find((id) => id === movie.id)) {\r\n    movie.playlist = true;\r\n  } else {\r\n    movie.playlist = false\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <Card sx={{ maxWidth: 345, backgroundImage: \"url('https://wallpaperboat.com/wp-content/uploads/2019/10/high-resolution-black-background-06.jpg')\" }} >\r\n            <CardHeader\r\n        avatar={\r\n          movie.favorite ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <FavoriteIcon />\r\n            </Avatar>\r\n          ) : movie.playlist ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <PlaylistTagIcon />\r\n            </Avatar>\r\n          ) : null\r\n        }\r\n        \r\n        title={\r\n          <Typography sx={{color: 'white'}} variant=\"h6\" component=\"p\">\r\n            {movie.title}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n          movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent sx={{color: 'white'}}>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {\" \"}{movie.release_date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {movie.vote_average}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {action(movie)}\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport Movie from \"../movieCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst MovieList = ( {movies, action }) => {\r\n  let movieCards = movies.map((m) => (\r\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Movie key={m.id} movie={m} action={action} />\r\n    </Grid>\r\n  ));\r\n  return movieCards;\r\n};\r\n\r\nexport default MovieList;","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport Spinner from '../spinner';\r\nimport MovieList from \"../movieList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport {makeStyles} from \"@material-ui/core\"\r\nimport Fab from \"@mui/material/Fab\";\r\nimport * as auth from \"firebase/auth\"\r\nimport fireapp from \"../../firebase\";\r\nconst FilterCard = lazy(() => import(\"../filterMoviesCard\"));\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    backgroundColor: \"rgba(95,90,90,0.9)\",\r\n    padding: \"5px 0px\",\r\n    color: \"white\",\r\n    width: \"100vw\",\r\n    marginLeft: \"-2vw\",\r\n    \r\n  },\r\n  signOut: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    marginLeft: \"-2vw\",\r\n    right: \"2em\"\r\n  },\r\n  deleteAccount: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    marginLeft: \"-2vw\",\r\n    left: \"2em\"\r\n  }\r\n}));\r\n\r\nfunction MovieListPageTemplate({ movies, title, action, pages,setPage,current_page }) {\r\n  //States\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const [ratingFilter, setRatingFilter] = useState(\"0\");\r\n\r\n  const genreId = Number(genreFilter);\r\n \r\n  \r\n  let displayedMovies = movies.filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    }).filter((m) => {\r\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n    }).filter((m) => {\r\n      //vote average\r\n         if(ratingFilter === 0){\r\n           return m\r\n         }\r\n         if(ratingFilter === 1){\r\n          \r\n          return m.vote_average >= 8\r\n         }\r\n         if(ratingFilter === 2){\r\n          \r\n          return m.vote_average >= 5 && m.vote_average <= 8\r\n         }\r\n         if(ratingFilter === 3){\r\n          \r\n          return m.vote_average <= 5\r\n         }\r\n        return m;\r\n  })\r\n\r\n\r\n\r\n  const handleChange = (type, value) => {\r\n  //  if(type === \"name\"){\r\n    if (type === \"name\") {\r\n    setNameFilter(value);\r\n    }\r\n    if(type === \"genre\"){\r\n      setGenreFilter(value);\r\n    }\r\n // }\r\n\r\n  if(type === \"rating\"){\r\n    setRatingFilter(value)\r\n  }\r\n   // console.log(type)\r\n  };\r\n\r\n\r\n  const handleOnChange = (page) =>{\r\n    \r\n      \r\n    \r\n    setPage(page)\r\n    window.scroll(0,0)\r\n  \r\n    \r\n  \r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n  \r\n    <Grid container sx={{ padding: '20px', backgroundColor: \"rgba(0,0,0,0.1)\" } }>\r\n       \r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5} >\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n        <Suspense fallback={<Spinner/>}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n            ratingFilter={ratingFilter}\r\n          />\r\n          </Suspense>\r\n        </Grid>\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n      <div className={classes.root}>\r\n      \r\n        <Pagination count={pages} defaultPage={1} color=\"primary\" size=\"large\" hideNextButton hidePrevButton variant=\"outlined\" shape=\"rounded\" onChange={(e) => handleOnChange(e.target.textContent)} style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }} />\r\n        </div>\r\n        <div className={classes.signOut}>\r\n        <Fab color=\"primary\" variant=\"extended\" onClick={() => auth.signOut(fireapp)}>Sign Out!</Fab>\r\n        </div>\r\n        <div className={classes.deleteAccount}>\r\n        <Fab color=\"secondary\" variant=\"extended\" onClick={() => auth.deleteUser(fireapp.currentUser)}>Delete Account!</Fab>\r\n        </div>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\nexport default MovieListPageTemplate;","import React, {useState,useEffect} from \"react\";\r\nimport PageTemplate from '../components/templateMovieListPage'\r\nimport { getUpcomingMoviesPage } from \"../api/tmdb-api\";\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport PlaylistAddIcon from '../components/cardIcons/addToPlaylist'\r\n\r\n\r\nconst UpcomingMoviesPage = (props) => {\r\n  const [page,setPage] = useState(1)\r\n  const {  data, error, isLoading, isError,refetch }  = useQuery(\"upcoming\", () => getUpcomingMoviesPage(page),{enabled: true }) \r\n\r\n\r\n  useEffect(() => { \r\n     refetch();\r\n     // eslint-disable-next-line\r\n   }, [page]);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }\r\n    \r\n  const movies = data.results;\r\n  \r\n  //gets the total number of available pages for the query\r\n  const total_pages = data.total_pages // -- For pagination\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n  //const addToFavorites = (movieId) => true \r\n\r\n  \r\n  return (\r\n    <PageTemplate\r\n      pages={total_pages} //For Pagination\r\n      title='Upcoming Movies'\r\n      movies={movies}\r\n      setPage={setPage}\r\n      action={(movie) => {\r\n        return <PlaylistAddIcon movie={movie} />\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default UpcomingMoviesPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 10H3v2h11v-2zm0-4H3v2h11V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM3 16h7v-2H3v2z\"\n}), 'PlaylistAdd');\n\nexports.default = _default;"],"names":["getMovie","args","console","log","id","queryKey","fetch","process","then","response","ok","Error","json","message","catch","error","getGenres","getMovieImages","getMovieReviews","res","results","getMovieCredits","getMoviesPage","page","getUpcomingMoviesPage","getNowPlayingMoviesPage","getPopularMoviesPage","getTvPage","getTvShow","getTvCredits","getTvShowImages","getTvShowReviews","movie","context","useContext","MoviesContext","onClick","e","preventDefault","addToPlaylist","color","fontSize","props","title","navigate","useNavigate","component","sx","borderRadius","backgroundColor","display","justifyContent","flexWrap","marginBottom","variant","MovieCard","action","favorites","playlists","find","favorite","playlist","Card","maxWidth","backgroundImage","CardHeader","avatar","Avatar","Favorite","Typography","CardMedia","height","image","poster_path","img","CardContent","Grid","container","item","xs","release_date","StarRate","vote_average","CardActions","disableSpacing","to","Button","size","movies","map","m","sm","md","lg","xl","FilterCard","lazy","useStyles","makeStyles","root","position","overflow","bottom","zIndex","padding","width","marginLeft","signOut","right","deleteAccount","left","pages","setPage","current_page","useState","nameFilter","setNameFilter","genreFilter","setGenreFilter","ratingFilter","setRatingFilter","genreId","Number","displayedMovies","filter","toLowerCase","search","genre_ids","includes","classes","spacing","Suspense","fallback","onUserInput","type","value","titleFilter","className","Pagination","count","defaultPage","hideNextButton","hidePrevButton","shape","onChange","target","textContent","window","scroll","style","Fab","auth","fireapp","useQuery","enabled","data","isLoading","isError","refetch","useEffect","total_pages","localStorage","setItem","JSON","stringify","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}