{"version":3,"file":"static/js/430.279c309d.chunk.js","mappings":"yJAoBA,IAf0B,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACrBC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAO3B,OACE,SAAC,IAAU,CAAC,aAAW,kBAAkBC,QANf,SAACC,GAC3BA,EAAEC,iBACFL,EAAQM,cAAcP,EACxB,EAGwE,UACpE,SAAC,IAAe,CAACQ,MAAM,UAAUC,SAAS,WAGhD,C,+GC6BA,UAvC6B,SAACC,GAC5B,OAAuBC,EAAAA,EAAAA,UAAS,GAAE,eAA3BC,EAAI,KAACC,EAAO,KACnB,GAAsDC,EAAAA,EAAAA,UAAS,eAAe,kBAAMC,EAAAA,EAAAA,IAAwBH,EAAK,GAAC,CAACI,SAAS,IAAnHC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAAQC,EAAO,EAAPA,QAQzC,IALAC,EAAAA,EAAAA,YAAU,WACPD,GAEF,GAAG,CAACT,IAEDO,EACF,OAAO,SAAC,IAAO,IAGjB,GAAIC,EACF,OAAO,wBAAKF,EAAMK,UAGpB,IAAMC,EAASP,EAAKQ,QAGdC,EAAcT,EAAKS,YACnBC,EAAYH,EAAOI,QAAO,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,IAK/C,OAJAC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUP,KAK/C,SAAC,IAAY,CACXQ,MAAOT,EACPU,MAAM,qBACNZ,OAAQA,EACRX,QAASA,EACTwB,OAAQ,SAACrC,GACP,OAAO,SAAC,IAAe,CAACA,MAAOA,GACjC,GAGN,C,2BC5CIsC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sFACD,eAEJN,EAAQ,EAAUG,C","sources":["components/cardIcons/addToPlaylist.js","pages/nowPlayingMoviesPage.js","../node_modules/@mui/icons-material/PlaylistAdd.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\r\n\r\nconst AddToPlaylistIcon = ({ movie }) => {\r\n  const context = useContext(MoviesContext);\r\n\r\n  const handleAddToPlaylist = (e) => {\r\n    e.preventDefault();\r\n    context.addToPlaylist(movie);\r\n  };\r\n\r\n  return (\r\n    <IconButton aria-label=\"add to playlist\" onClick={handleAddToPlaylist}>\r\n      <PlaylistAddIcon color=\"primary\" fontSize=\"large\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default AddToPlaylistIcon;","import React, {useState,useEffect} from \"react\";\r\nimport PageTemplate from '../components/templateMovieListPage'\r\nimport { getNowPlayingMoviesPage } from \"../api/tmdb-api\";\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport PlaylistAddIcon from '../components/cardIcons/addToPlaylist'\r\n\r\n\r\nconst NowPlayingMoviesPage = (props) => {\r\n  const [page,setPage] = useState(1)\r\n  const {  data, error, isLoading, isError,refetch }  = useQuery(\"now_playing\", () => getNowPlayingMoviesPage(page),{enabled: true }) \r\n\r\n\r\n  useEffect(() => { \r\n     refetch();\r\n     // eslint-disable-next-line\r\n   }, [page]);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }\r\n    \r\n  const movies = data.results;\r\n  \r\n  //gets the total number of available pages for the query\r\n  const total_pages = data.total_pages // -- For pagination\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n  //const addToFavorites = (movieId) => true \r\n\r\n  \r\n  return (\r\n    <PageTemplate\r\n      pages={total_pages} //For Pagination\r\n      title='Playing in Cinemas'\r\n      movies={movies}\r\n      setPage={setPage}\r\n      action={(movie) => {\r\n        return <PlaylistAddIcon movie={movie} />\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default NowPlayingMoviesPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 10H3v2h11v-2zm0-4H3v2h11V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM3 16h7v-2H3v2z\"\n}), 'PlaylistAdd');\n\nexports.default = _default;"],"names":["movie","context","useContext","MoviesContext","onClick","e","preventDefault","addToPlaylist","color","fontSize","props","useState","page","setPage","useQuery","getNowPlayingMoviesPage","enabled","data","error","isLoading","isError","refetch","useEffect","message","movies","results","total_pages","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","pages","title","action","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}