{"version":3,"file":"static/js/566.0ab93562.chunk.js","mappings":"oTAgBMA,EACJ,CACEC,OAAQ,EACRC,SAAU,IACVC,gBAAiB,sBAGN,SAASC,EAAiBC,GAEvC,IAAIC,EAAM,CAAC,CAAC,GAAK,EAAE,OAAS,eAAe,CAAC,GAAK,EAAE,OAAS,oBAAoB,CAAC,GAAK,EAAE,OAAS,qBAAqB,CAAC,GAAK,EAAE,OAAS,2BAEvI,GAA4CC,EAAAA,EAAAA,UAAS,SAAUC,EAAAA,IAAvDC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAEhC,GAAID,EACF,OAAO,SAAC,IAAO,IAGjB,GAAIC,EACF,OAAO,wBAAKF,EAAMG,UAGE,gBAAlBP,EAAI,GAAGQ,QACTR,EAAIS,QAAQ,CAAEC,GAAI,IAAKF,OAAQ,gBAGjC,IAAMG,EAASR,EAAKQ,OACG,QAAnBA,EAAO,GAAGC,MACZD,EAAOF,QAAQ,CAAEC,GAAI,IAAKE,KAAM,QAGlC,IAAMC,EAAe,SAACC,EAAGC,EAAMC,GAC7BF,EAAEG,iBACFlB,EAAMmB,YAAYH,EAAMC,EAC1B,EAcA,OACE,UAAC,IAAI,CACHG,GAAI,CACFC,SAAU,IACVvB,gBAAiB,oBAEnBwB,QAAQ,WAAU,WAClB,UAAC,IAAW,YACV,UAAC,IAAU,CAACA,QAAQ,KAAKC,UAAU,KAAI,WACrC,SAAC,IAAU,CAACC,SAAS,UAAU,yBAG9B,SAAC,IAAS,CACVJ,IAAE,UAAMzB,GACRgB,GAAG,gBACHc,MAAM,eACNT,KAAK,SACLM,QAAQ,SACRL,MAAOjB,EAAM0B,YACbC,SA/BgB,SAACZ,EAAGf,GAC3Bc,EAAaC,EAAG,OAAQA,EAAEa,OAAOX,MACnC,KA+BM,UAAC,IAAW,CAACG,IAAE,UAAMzB,GAAa,WAChC,SAAC,IAAU,CAACgB,GAAG,cAAa,oBAC5B,SAAC,IAAM,CACbkB,QAAQ,cACRlB,GAAG,eACHmB,aAAa,GACbb,MAAOjB,EAAM+B,YACbJ,SApCwB,SAACZ,GACzBD,EAAaC,EAAG,QAASA,EAAEa,OAAOX,MACpC,EAkC8B,SAEnBL,EAAOoB,KAAI,SAACC,GACX,OACE,SAAC,IAAQ,CAAgBhB,MAAOgB,EAAMtB,GAAG,SACtCsB,EAAMpB,MADMoB,EAAMtB,GAIzB,UAIJ,UAAC,IAAW,CAACS,IAAE,UAAMzB,GAAa,WAChC,SAAC,IAAU,CAACgB,GAAG,eAAc,qBAC7B,SAAC,IAAM,CACbkB,QAAQ,eACRlB,GAAG,gBACHmB,aAAa,GACbb,MAAOjB,EAAMkC,aACbP,SAnDuB,SAACZ,GAC1BD,EAAaC,EAAE,SAASA,EAAEa,OAAOX,MACnC,EAiDiC,SAEpBhB,EAAI+B,KAAI,SAACvB,GACR,OACE,SAAC,IAAQ,CAAiBQ,MAAOR,EAAOE,GAAG,SACxCF,EAAOA,QADKA,EAAOE,GAI1B,aAKN,SAAC,IAAS,CACRS,GAAI,CAAEe,OAAQ,KACdC,MAAOC,EACPC,MAAM,YAER,SAAC,IAAW,WACV,UAAC,IAAU,CAAChB,QAAQ,KAAKC,UAAU,KAAI,WACrC,SAAC,IAAU,CAACC,SAAS,UAAU,sBAE/B,yBAKV,C,2BCvIIe,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UAEJN,EAAQ,EAAUG,C","sources":["components/filterMoviesCard/index.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\r\nimport { getGenres } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\n\r\nconst formControl = \r\n  {\r\n    margin: 1,\r\n    minWidth: 220,\r\n    backgroundColor: \"rgb(255, 255, 255)\"\r\n  };\r\n\r\nexport default function FilterMoviesCard(props) {\r\n\r\n  let arr = [{\"id\":0,\"rating\":\"All ratings\"},{\"id\":1,\"rating\":\"Best rating (8+)\"},{\"id\":2,\"rating\":\"Good rating (5-8)\"},{\"id\":3,\"rating\":\"Not great rating (0-5)\"}]\r\n\r\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n  if (arr[0].rating !== \"All ratings\"){\r\n    arr.unshift({ id: \"0\", rating: \"All ratings\" });\r\n  }\r\n\r\n  const genres = data.genres;\r\n  if (genres[0].name !== \"All\"){\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n  }\r\n\r\n  const handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    props.onUserInput(type, value); // NEW\r\n  };\r\n\r\n  const handleTextChange = (e, props) => {\r\n    handleChange(e, \"name\", e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    handleChange(e, \"genre\", e.target.value);\r\n  };\r\n\r\nconst handleRatingChange = (e) => {\r\n  handleChange(e,\"rating\",e.target.value)\r\n}\r\n\r\n  return (\r\n    <Card \r\n      sx={{\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(204, 204, 0)\"\r\n      }} \r\n      variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n        </Typography>\r\n           <TextField\r\n           sx={{...formControl}}\r\n           id=\"filled-search\"\r\n           label=\"Search field\"\r\n           type=\"search\"\r\n           variant=\"filled\"\r\n           value={props.titleFilter}\r\n           onChange={handleTextChange}\r\n    />\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n          <Select\r\n    labelId=\"genre-label\"\r\n    id=\"genre-select\"\r\n    defaultValue=\"\"\r\n    value={props.genreFilter}\r\n    onChange={handleGenreChange}\r\n  >\r\n            {genres.map((genre) => {\r\n              return (\r\n                <MenuItem key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"rating-label\">Rating</InputLabel>\r\n          <Select\r\n    labelId=\"rating-label\"\r\n    id=\"rating-select\"\r\n    defaultValue=\"\"\r\n    value={props.ratingFilter}\r\n    onChange={handleRatingChange}\r\n  >\r\n            {arr.map((rating) => {\r\n              return (\r\n                <MenuItem key={rating.id} value={rating.id}>\r\n                  {rating.rating}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n      </CardContent>\r\n      <CardMedia\r\n        sx={{ height: 300 }}\r\n        image={img}\r\n        title=\"Filter\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"names":["formControl","margin","minWidth","backgroundColor","FilterMoviesCard","props","arr","useQuery","getGenres","data","error","isLoading","isError","message","rating","unshift","id","genres","name","handleChange","e","type","value","preventDefault","onUserInput","sx","maxWidth","variant","component","fontSize","label","titleFilter","onChange","target","labelId","defaultValue","genreFilter","map","genre","ratingFilter","height","image","img","title","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}