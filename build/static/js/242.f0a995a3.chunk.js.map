{"version":3,"file":"static/js/242.f0a995a3.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/filterMoviesCard/index.js","components/headerMovieList/index.js","components/movieCard/index.js","components/movieList/index.js","components/templateMovieListPage/index.js"],"sourcesContent":["export const getMovies = () => {\r\n \r\n  return fetch(\r\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\nexport const getMovie = (args) => {\r\n   console.log(args)\r\n  const [, idPart] = args.queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getUpcomingMovies = () => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\n export const getGenres = async () => {\r\n    return fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  }; \r\n\r\n  export const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      \r\n      `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n      \r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n  \r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n  export const getMovieReviews = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json.results);\r\n        return json.results;\r\n      });\r\n  };\r\n\r\n  export const getMovieCredits = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n        return json;\r\n      });\r\n  };\r\n\r\n//Pagination ---------------\r\n  export const getMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getUpcomingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n\r\n  export const getNowPlayingMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getPopularMoviesPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvPage = async (page) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/tv/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getTvShow = (args) => {\r\n    console.log(args)\r\n   const [, idPart] = args.queryKey;\r\n   const { id } = idPart;\r\n   return fetch(\r\n     `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n   ).then((response) => {\r\n     if (!response.ok) {\r\n       throw new Error(response.json().message);\r\n     }\r\n     return response.json();\r\n   })\r\n   .catch((error) => {\r\n     throw error\r\n  });\r\n };\r\n\r\n export const getTvCredits = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      \r\n      return json;\r\n    });\r\n};\r\n\r\n export const getTvShowImages = ({ queryKey }) => {\r\n  const [, idPart] = queryKey;\r\n  const { id } = idPart;\r\n  return fetch(\r\n    \r\n    `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    \r\n  ).then( (response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n\r\n  })\r\n  .catch((error) => {\r\n    throw error\r\n });\r\n};\r\n\r\nexport const getTvShowReviews = (id) => {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      // console.log(json.results);\r\n      return json.results;\r\n    });\r\n};","import Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\r\nimport { getGenres } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\n\r\nconst formControl = \r\n  {\r\n    margin: 1,\r\n    minWidth: 220,\r\n    backgroundColor: \"rgb(255, 255, 255)\"\r\n  };\r\n\r\nexport default function FilterMoviesCard(props) {\r\n\r\n  let arr = [{\"id\":0,\"rating\":\"All ratings\"},{\"id\":1,\"rating\":\"Best rating (8+)\"},{\"id\":2,\"rating\":\"Good rating (5-8)\"},{\"id\":3,\"rating\":\"Not great rating (0-5)\"}]\r\n\r\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n  if (arr[0].rating !== \"All ratings\"){\r\n    arr.unshift({ id: \"0\", rating: \"All ratings\" });\r\n  }\r\n\r\n  const genres = data.genres;\r\n  if (genres[0].name !== \"All\"){\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n  }\r\n\r\n  const handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    props.onUserInput(type, value); // NEW\r\n  };\r\n\r\n  const handleTextChange = (e, props) => {\r\n    handleChange(e, \"name\", e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    handleChange(e, \"genre\", e.target.value);\r\n  };\r\n\r\nconst handleRatingChange = (e) => {\r\n  handleChange(e,\"rating\",e.target.value)\r\n}\r\n\r\n  return (\r\n    <Card \r\n      sx={{\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(204, 204, 0)\"\r\n      }} \r\n      variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n        </Typography>\r\n           <TextField\r\n           sx={{...formControl}}\r\n           id=\"filled-search\"\r\n           label=\"Search field\"\r\n           type=\"search\"\r\n           variant=\"filled\"\r\n           value={props.titleFilter}\r\n           onChange={handleTextChange}\r\n    />\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n          <Select\r\n    labelId=\"genre-label\"\r\n    id=\"genre-select\"\r\n    defaultValue=\"\"\r\n    value={props.genreFilter}\r\n    onChange={handleGenreChange}\r\n  >\r\n            {genres.map((genre) => {\r\n              return (\r\n                <MenuItem key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"rating-label\">Rating</InputLabel>\r\n          <Select\r\n    labelId=\"rating-label\"\r\n    id=\"rating-select\"\r\n    defaultValue=\"\"\r\n    value={props.ratingFilter}\r\n    onChange={handleRatingChange}\r\n  >\r\n            {arr.map((rating) => {\r\n              return (\r\n                <MenuItem key={rating.id} value={rating.id}>\r\n                  {rating.rating}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n      </CardContent>\r\n      <CardMedia\r\n        sx={{ height: 300 }}\r\n        image={img}\r\n        title=\"Filter\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props ) => {\r\n  const title = props.title\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Paper \r\n      component=\"div\" \r\n      sx={{\r\n        borderRadius: \"50px\",\r\n        backgroundColor: 'rgba(255, 255, 0,0.7)',\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: 1.5,\r\n      }}\r\n      >\r\n      <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {title}\r\n      </Typography>\r\n\r\n\r\n      <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useContext  } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport PlaylistTagIcon from \"@mui/icons-material/PlaylistAddCheck\";\r\nimport CalendarIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\n\r\n\r\n\r\nexport default function MovieCard({movie, action}) {\r\n  const { favorites,playlists } = useContext(MoviesContext);\r\n\r\n  if (favorites.find((id) => id === movie.id)) {\r\n    movie.favorite = true;\r\n  } else {\r\n    movie.favorite = false\r\n  }\r\n\r\n  if (playlists.find((id) => id === movie.id)) {\r\n    movie.playlist = true;\r\n  } else {\r\n    movie.playlist = false\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <Card sx={{ maxWidth: 345, backgroundImage: \"url('https://wallpaperboat.com/wp-content/uploads/2019/10/high-resolution-black-background-06.jpg')\" }} >\r\n            <CardHeader\r\n        avatar={\r\n          movie.favorite ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <FavoriteIcon />\r\n            </Avatar>\r\n          ) : movie.playlist ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <PlaylistTagIcon />\r\n            </Avatar>\r\n          ) : null\r\n        }\r\n        \r\n        title={\r\n          <Typography sx={{color: 'white'}} variant=\"h6\" component=\"p\">\r\n            {movie.title}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n          movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent sx={{color: 'white'}}>\r\n        <Grid container>\r\n          <Grid item xs={7}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {\" \"}{movie.release_date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {movie.vote_average}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {action(movie)}\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport Movie from \"../movieCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst MovieList = ( {movies, action }) => {\r\n  let movieCards = movies.map((m) => (\r\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Movie key={m.id} movie={m} action={action} />\r\n    </Grid>\r\n  ));\r\n  return movieCards;\r\n};\r\n\r\nexport default MovieList;","import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport MovieList from \"../movieList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport {makeStyles} from \"@material-ui/core\"\r\nimport Fab from \"@mui/material/Fab\";\r\nimport * as auth from \"firebase/auth\"\r\nimport fireapp from \"../../firebase\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    backgroundColor: \"rgba(95,90,90,0.9)\",\r\n    padding: \"5px 0px\",\r\n    color: \"white\",\r\n    width: \"100vw\",\r\n    marginLeft: \"-2vw\",\r\n    \r\n  },\r\n  signOut: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    marginLeft: \"-2vw\",\r\n    right: \"2em\"\r\n  },\r\n  deleteAccount: {\r\n    position: \"fixed\",\r\n    overflow: \"hidden\",\r\n    bottom: 0,\r\n    zIndex: 200,\r\n    marginLeft: \"-2vw\",\r\n    left: \"2em\"\r\n  }\r\n}));\r\n\r\nfunction MovieListPageTemplate({ movies, title, action, pages,setPage,current_page }) {\r\n  //States\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const [ratingFilter, setRatingFilter] = useState(\"0\");\r\n\r\n  const genreId = Number(genreFilter);\r\n \r\n  \r\n  let displayedMovies = movies.filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    }).filter((m) => {\r\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n    }).filter((m) => {\r\n      //vote average\r\n         if(ratingFilter === 0){\r\n           return m\r\n         }\r\n         if(ratingFilter === 1){\r\n          \r\n          return m.vote_average >= 8\r\n         }\r\n         if(ratingFilter === 2){\r\n          \r\n          return m.vote_average >= 5 && m.vote_average <= 8\r\n         }\r\n         if(ratingFilter === 3){\r\n          \r\n          return m.vote_average <= 5\r\n         }\r\n        return m;\r\n  })\r\n\r\n\r\n\r\n  const handleChange = (type, value) => {\r\n  //  if(type === \"name\"){\r\n    if (type === \"name\") {\r\n    setNameFilter(value);\r\n    }\r\n    if(type === \"genre\"){\r\n      setGenreFilter(value);\r\n    }\r\n // }\r\n\r\n  if(type === \"rating\"){\r\n    setRatingFilter(value)\r\n  }\r\n   // console.log(type)\r\n  };\r\n\r\n\r\n  const handleOnChange = (page) =>{\r\n    \r\n      \r\n    \r\n    setPage(page)\r\n    window.scroll(0,0)\r\n  \r\n    \r\n  \r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n  \r\n    <Grid container sx={{ padding: '20px', backgroundColor: \"rgba(0,0,0,0.1)\" } }>\r\n       \r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5} >\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n            ratingFilter={ratingFilter}\r\n          />\r\n        </Grid>\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n      <div className={classes.root}>\r\n      \r\n        <Pagination count={pages} defaultPage={1} color=\"primary\" size=\"large\" hideNextButton hidePrevButton variant=\"outlined\" shape=\"rounded\" onChange={(e) => handleOnChange(e.target.textContent)} style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }} />\r\n        </div>\r\n        <div className={classes.signOut}>\r\n        <Fab color=\"primary\" variant=\"extended\" onClick={() => auth.signOut(fireapp)}>Sign Out!</Fab>\r\n        </div>\r\n        <div className={classes.deleteAccount}>\r\n        <Fab color=\"secondary\" variant=\"extended\" onClick={() => auth.deleteUser(fireapp.currentUser)}>Delete Account!</Fab>\r\n        </div>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\nexport default MovieListPageTemplate;"],"names":["getMovie","args","console","log","id","queryKey","fetch","process","then","response","ok","Error","json","message","catch","error","getGenres","getMovieImages","getMovieReviews","res","results","getMovieCredits","getMoviesPage","page","getUpcomingMoviesPage","getNowPlayingMoviesPage","getPopularMoviesPage","getTvPage","getTvShow","getTvCredits","getTvShowImages","getTvShowReviews","formControl","margin","minWidth","backgroundColor","FilterMoviesCard","props","arr","useQuery","data","isLoading","isError","rating","unshift","genres","name","handleChange","e","type","value","preventDefault","onUserInput","sx","maxWidth","variant","component","fontSize","label","titleFilter","onChange","target","labelId","defaultValue","genreFilter","map","genre","ratingFilter","height","image","img","title","navigate","useNavigate","borderRadius","display","justifyContent","flexWrap","marginBottom","onClick","color","MovieCard","movie","action","useContext","MoviesContext","favorites","playlists","find","favorite","playlist","Card","backgroundImage","CardHeader","avatar","Avatar","Favorite","Typography","CardMedia","poster_path","CardContent","Grid","container","item","xs","release_date","StarRate","vote_average","CardActions","disableSpacing","to","Button","size","movies","m","sm","md","lg","xl","useStyles","makeStyles","root","position","overflow","bottom","zIndex","padding","width","marginLeft","signOut","right","deleteAccount","left","pages","setPage","current_page","useState","nameFilter","setNameFilter","setGenreFilter","setRatingFilter","genreId","Number","displayedMovies","filter","toLowerCase","search","genre_ids","includes","classes","spacing","className","Pagination","count","defaultPage","hideNextButton","hidePrevButton","shape","textContent","window","scroll","style","Fab","auth","fireapp"],"sourceRoot":""}